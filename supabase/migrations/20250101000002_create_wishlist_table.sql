/*
# Create Wishlist Table
This script creates the `wishlists` table to allow users to save books they are interested in. It establishes relationships with the `users` and `books` tables and sets up appropriate security policies.

## Query Description:
This operation creates a new table named `wishlists` to store user-specific book wishlists. It links to existing `users` and `books` tables via foreign keys. Row Level Security (RLS) is enabled to ensure users can only access their own wishlist items. This is a non-destructive operation and poses no risk to existing data.

## Metadata:
- Schema-Category: "Structural"
- Impact-Level: "Low"
- Requires-Backup: false
- Reversible: true (The table can be dropped)

## Structure Details:
- Table: `public.wishlists`
- Columns: `id`, `user_id`, `book_id`, `created_at`
- Foreign Keys:
  - `wishlists.user_id` -> `auth.users.id`
  - `wishlists.book_id` -> `public.books.id`
- Constraints: A unique constraint on `(user_id, book_id)` prevents duplicate entries.

## Security Implications:
- RLS Status: Enabled
- Policy Changes: Yes (New policies are created for the `wishlists` table)
- Auth Requirements: Users must be authenticated to interact with their wishlist.

## Performance Impact:
- Indexes: Primary key and foreign key indexes are automatically created. A unique index is also added.
- Triggers: None
- Estimated Impact: Low. The impact on performance will be minimal.
*/

-- 1. Create the wishlists table
CREATE TABLE public.wishlists (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id uuid NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
    book_id uuid NOT NULL REFERENCES public.books(id) ON DELETE CASCADE, -- CORRECTED: Changed from bigint to uuid
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    CONSTRAINT wishlists_user_id_book_id_key UNIQUE (user_id, book_id)
);

-- 2. Add comments to the table and columns
COMMENT ON TABLE public.wishlists IS 'Stores items that users have added to their wishlist.';
COMMENT ON COLUMN public.wishlists.user_id IS 'Links to the user who created the wishlist item.';
COMMENT ON COLUMN public.wishlists.book_id IS 'Links to the book in the wishlist.';

-- 3. Enable Row Level Security (RLS)
ALTER TABLE public.wishlists ENABLE ROW LEVEL SECURITY;

-- 4. Create RLS policies
-- Users can view their own wishlist items
CREATE POLICY "Enable read access for own wishlist items"
ON public.wishlists
FOR SELECT
USING (auth.uid() = user_id);

-- Users can insert items into their own wishlist
CREATE POLICY "Enable insert for own wishlist items"
ON public.wishlists
FOR INSERT
WITH CHECK (auth.uid() = user_id);

-- Users can delete their own wishlist items
CREATE POLICY "Enable delete for own wishlist items"
ON public.wishlists
FOR DELETE
USING (auth.uid() = user_id);
